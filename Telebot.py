import requests
import asyncio
from bs4 import BeautifulSoup
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters, CallbackQueryHandler, Updater

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    welcome_text = (
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã ‚Ññ13üéì.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n\n"
        "  /news ‚Äî –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π\n"
        "  /Info ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–∫–æ–ª–µ\n"
        "  /schedule ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n"
        "  /help ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª—å—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ"
    )

    # –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    inline_keyboard = [
        [
            InlineKeyboardButton("–†–æ–¥–∏—Ç–µ–ª—å", callback_data='parent'),
            InlineKeyboardButton("–£—á–∏—Ç–µ–ª—å", callback_data='teacher'),
            InlineKeyboardButton("–£—á–µ–Ω–∏–∫", callback_data='student')
        ]
    ]

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫
    inline_markup = InlineKeyboardMarkup(inline_keyboard)

    # –°–æ–∑–¥–∞–Ω–∏–µ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞
    reply_keyboard = [
        [
            KeyboardButton("–ù–æ–≤–æ—Å—Ç–∏"),
            KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"),
            KeyboardButton("–ò–Ω—Ñ–æ")
        ],
        [
            KeyboardButton("–ü–æ–º–æ—â—å")
        ],
        [
            KeyboardButton("–ù–∞—á–∞–ª–æ")
        ]
    ]

    # –†–∞–∑–º–µ—Ç–∫–∞ –¥–ª—è reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    reply_markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True, one_time_keyboard=False)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏ –∏ reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    if update.message:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å –æ–±–µ–∏–º–∏ –∫–ª–∞–≤–∏—à–∞–º–∏
        await update.message.reply_text(welcome_text, reply_markup=inline_markup, parse_mode="Markdown")
        await update.message.reply_text(text="–ö–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã", reply_markup=reply_markup)
    elif update.callback_query:
        # –î–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback_query (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏)
        await update.callback_query.edit_message_text(welcome_text, reply_markup=inline_markup, parse_mode="Markdown")
        await update.callback_query.message.reply_text(text="–ö–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã", reply_markup=reply_markup)
results=[]
async def start_button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" (Sback), –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ student
    if query.data == "Sback":
        query_data = "student"
    elif query.data == "Tback":
        query_data="teacher"
    elif query.data == "Pback":
        query_data = "parent"
    else:
        query_data = query.data

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
    if query_data == "parent":
        message = ("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –†–æ–¥–∏—Ç–µ–ª—å! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã ‚Ññ13üéì.\n\n"
                   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n\n"
                   "  /news ‚Äî –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π\n"
                   "  /Info ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–∫–æ–ª–µ\n"
                   "  /schedule ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n"
                   "  /help ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª—å—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ")
        keyboard = [
            [InlineKeyboardButton("–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–∏—Ç–µ—Ç", callback_data='Pbutton1'),
             InlineKeyboardButton("–ü–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–∏–π —Å–æ–≤–µ—Ç", callback_data='Pbutton2'),
             InlineKeyboardButton("–°–ü–ü–°", callback_data='Pbutton3')],
            [InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='back')]
        ]
    elif query_data == "Pbutton1":
        url="https://sch13.oktobrgrodno.gov.by/%D1%80%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8F%D0%BC/%D1%80%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%B8%D0%B9-%D0%BA%D0%BE%D0%BC%D0%B8%D1%82%D0%B5%D1%82"
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            items = soup.find("table").find("tbody").find_all("tr")[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
            message = (f"üìã –°–æ—Å—Ç–∞–≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–∏—Ç–µ—Ç–∞:\n\n"
                       )

            for item in items:
                cells = item.find_all("td")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º find_all –¥–ª—è –≤—Å–µ—Ö —è—á–µ–µ–∫
                if len(cells) >= 2:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –¥–≤–µ —è—á–µ–π–∫–∏
                    FIo = cells[0].get_text(strip=True)  # –§–ò–û
                    klass = cells[1].get_text(strip=True)  # –ö–ª–∞—Å—Å
                    message += f"‚Ä¢ **{FIo}**, –∫–ª–∞—Å—Å: `{klass}`\n"  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message+=(f"\n\nC –ø–ª–∞–Ω–æ–º —Ä–∞–±–æ—Ç—ã —Ä–æ–¥–∏—Ç–µ–ª—Å–∫–æ–≥–æ –∫–æ–º–∏—Ç–µ—Ç–∞ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è [–∑–¥–µ—Å—å]({url})\n\n")
            # –ï—Å–ª–∏ message –ø—É—Å—Ç–æ–π –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞
            if not message:
                message = "–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ."

        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        keyboard=[
            [InlineKeyboardButton("–ü–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–∏–π —Å–æ–≤–µ—Ç",callback_data="Pbutton2"),
             InlineKeyboardButton("–°–ü–ü–°",callback_data="Pbutton3")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Pback")]
        ]
    elif query_data == "Pbutton2":
        message=("üìã –ü–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–∏–π —Å–æ–≤–µ—Ç\n\n"
                 "`–†–∞–±–æ—Ç–∞ –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ —Å—Ç.25 –ö–æ–¥–µ–∫—Å–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏. "
                 "–î–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–∏—Ö —Å–æ–≤–µ—Ç–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ "
                 "—Å –ü–æ–ª–æ–∂–µ–Ω–∏–µ–º –æ –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–æ–º —Å–æ–≤–µ—Ç–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–º "
                 "–ø–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ–º –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –†–ë –æ—Ç 25 –∏—é–ª—è 2011 –≥. ‚Ññ146 (–≤ —Ä–µ–¥. –æ—Ç 16.08.2022 ‚Ññ266).`"
                 "\n\n ‚Ä¢–¢–µ–ª–µ—Ñ–æ–Ω –≥–æ—Ä—è—á–µ–π –ª–∏–Ω–∏–∏: 8 (0152) 71 22 44\n\n"
                 "C **—Å–æ—Å—Ç–∞–≤–æ–º** –∏ **–æ—Ç—á–µ—Ç–æ–º** –ø–æ —Ä–∞–±–æ—Ç–µ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –Ω–∏–∂–µ")

        keyboard=[
            [InlineKeyboardButton("–°–æ—Å—Ç–∞–≤",callback_data="sostav"),InlineKeyboardButton("–û—Ç—á–µ—Ç",callback_data="otchet")],
            [InlineKeyboardButton("–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–∏—Ç–µ—Ç",callback_data="Pbutton1"),
             InlineKeyboardButton("–°–ü–ü–°",callback_data="Pbutton3")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Pback")]
        ]
    elif query_data=="sostav":
        url="https://sch13.oktobrgrodno.gov.by/%D1%80%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8F%D0%BC/%D0%BF%D0%BE%D0%BF%D0%B5%D1%87%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%B8%D0%B9-%D1%81%D0%BE%D0%B2%D0%B5%D1%82"
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            items = soup.find("table").find_all("tr")[1:]

            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è
            message = (f"üìã –°–æ—Å—Ç–∞–≤ –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞:\n\n")

            for item in items:
                cells = item.find_all("td")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º find_all –¥–ª—è –≤—Å–µ—Ö —è—á–µ–µ–∫
                if len(cells) >= 2:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –¥–≤–µ —è—á–µ–π–∫–∏
                    FIo = cells[0].get_text(strip=True)  # –§–ò–û
                    klass = cells[1].get_text(strip=True)  # –ö–ª–∞—Å—Å
                    message += f"‚Ä¢ **{FIo}**,   –î–æ–ª–∂–Ω–æ—Å—Ç—å: `{klass}`\n"  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ

            # –ï—Å–ª–∏ message –ø—É—Å—Ç–æ–π –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞
            if not message:
                message = "–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ."

        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        keyboard=[[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Pbutton2")]]
    elif query_data == "otchet":
        url = "https://sch13.oktobrgrodno.gov.by/%D1%80%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D1%8F%D0%BC/%D0%BF%D0%BE%D0%BF%D0%B5%D1%87%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%B8%D0%B9-%D1%81%D0%BE%D0%B2%D0%B5%D1%82"

        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            # –ù–∞—Ö–æ–¥–∏–º –≤–∫–ª–∞–¥–∫—É —Å id="tab4"
            items = soup.find("div", id="tab4")

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –ø–µ—Ä–∏–æ–¥ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
            title = items.find("span", style="text-decoration: none;").get_text(strip=True)
            period = items.find_all("span", style="text-decoration: none;")[2].get_text(strip=True)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = (
                f"üìã *–û—Ç—á–µ—Ç –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞*\n\n"
                f"**{title}**\n"
                f"üìÖ –ü–µ—Ä–∏–æ–¥: {period}\n\n"
            )
            description = items.find_all("p", style="text-align: justify;")
            for desc in description:
                des=desc.get_text(strip=True)
                message +=(f"{des}\n\n")

            message +=(f"üìö –° –ø–ª–∞–Ω–æ–º —Ä–∞–±–æ—Ç—ã –ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è [–∑–¥–µ—Å—å]({url})")
        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –Ω–∞–∑–∞–¥
        keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Pbutton2")]]
    elif query_data == "Pbutton3":
        url1="https://sch13.oktobrgrodno.gov.by/%D1%81%D0%BF%D0%BF%D1%81/%D1%81%D0%BE%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE-%D0%BF%D0%B5%D0%B4%D0%B0%D0%B3%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D0%B8-%D0%BF%D1%81%D0%B8%D1%85%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D1%81%D0%BB%D1%83%D0%B6%D0%B1%D0%B0"
        url2="https://sch13.oktobrgrodno.gov.by/%D1%81%D0%BF%D0%BF%D1%81/%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D1%8F-%D0%B4%D0%BB%D1%8F-%D1%80%D0%BE%D0%B4%D0%B8%D1%82%D0%B5%D0%BB%D0%B5%D0%B9"
        message=("üìö –°–æ—Ü–∏–∞–ª—å–Ω–æ-–ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∞—è –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–ª—É–∂–±–∞\n\n"
                 f"–û–∑–Ω–∫–æ–º–∏—Ç—å—Å—è —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –°–ü–ü–° —à–∫–æ–ª—ã –º–æ–∂–Ω–æ [–∑–¥–µ—Å—å]({url1})\n\n"
                 f"–í–æ—Ç [–°–ü–ü–°]({url2}) —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª–π")
        keyboard=[
            [InlineKeyboardButton("–ü–æ–ø–µ—á–∏—Ç–µ–ª—å—Å–∫–∏–π —Å–æ–≤–µ—Ç",callback_data="Pbutton2"),
             InlineKeyboardButton("–†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–∏—Ç–µ—Ç",callback_data="Pbutton1")],
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Pback")]
        ]
    elif query_data == "teacher":
        message = ("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –£—á–∏—Ç–µ–ª—å! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã ‚Ññ13üéì.\n\n"
                   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n\n"
                   "  /news ‚Äî –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π\n"
                   "  /Info ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–∫–æ–ª–µ\n"
                   "  /schedule ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n"
                   "  /help ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª—å—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ")
        keyboard = [
            [InlineKeyboardButton("–®–ê–ì", callback_data='Tbutton1'),
             InlineKeyboardButton("–ù–æ—Ä–º. –î–æ–∫—É–º–µ–Ω—Ç—ã", callback_data='Tbutton2'),
             InlineKeyboardButton("–°–ü–ü–°", callback_data='Tbutton3')],
            [InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='back')]
        ]
    elif query_data == "Tbutton1":
        global results
        url="https://sch13.oktobrgrodno.gov.by/%D0%B2%D0%BE%D1%81%D0%BF%D0%B8%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0/%D1%88%D0%BA%D0%BE%D0%BB%D0%B0-%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D0%B3%D0%BE-%D0%B3%D1%80%D0%B0%D0%B6%D0%B4%D0%B0%D0%BD%D0%B8%D0%BD%D0%B0"
        message=("*üìö –®–∫–æ–ª–∞ –ê–∫—Ç–∏–≤–Ω–æ–≥–æ –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞*\n\n"
                 "")
        results.clear()
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            containers = soup.find_all("div", class_="spoiler item entry", limit=9)


            for container in containers:
                theme_tag = container.find("h3")
                date_tag = container.find("span", class_="date")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–≥–æ–≤ –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
                if theme_tag:
                    theme = theme_tag.find_next(string=True).strip() if theme_tag.find_next(string=True) else "–¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
                else:
                    theme = "–¢–µ–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

                if date_tag and date_tag.string:
                    date = date_tag.string.strip()
                else:
                    date = "–î–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

                results.append({"–¢–µ–º–∞": theme, "–î–∞—Ç–∞": date})

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–æ—Ç–∞
            for i, result in enumerate(results, start=1):
                message += f"*{i}.* _–¢–µ–º–∞:_ {result['–¢–µ–º–∞']}\n"
                message += f"   üìÜ *–î–∞—Ç–∞:* {result['–î–∞—Ç–∞']}\n\n"
            message+=f"–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø–æ–ª–Ω—ã–º –ø–µ—Ä–µ—á–Ω–µ–º –º–æ–∂–Ω–æ [–∑–¥–µ—Å—å]({url})"
        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        keyboard = [[InlineKeyboardButton("–ü–æ–∏—Å–∫ –ø–æ –¥–∞—Ç–µ üîç",callback_data="search_date"),
                     InlineKeyboardButton("–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–º–µ üîç",callback_data="search_theme")],
        [InlineKeyboardButton("–ù–æ—Ä–º. –î–æ–∫—É–º–µ–Ω—Ç—ã", callback_data='Tbutton2'),
         InlineKeyboardButton("–°–ü–ü–°", callback_data='Tbutton3')],
        [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='Tback')]
    ]
    elif query_data == "search_date":
        message=("üîç –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 27.11.2024):")
        keyboard =[[(InlineKeyboardButton("–ù–∞–∑–∞–¥",callback_data="Tbutton1"))]]
        context.user_data['search_type'] = 'date'

    elif query_data == "search_theme":
        message=("üîç –í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Ç–µ–º–µ:")
        keyboard =[[(InlineKeyboardButton("–ù–∞–∑–∞–¥",callback_data="Tbutton1"))]]
        context.user_data['search_type'] = 'theme'


    elif query_data == "Tbutton2":
        url="https://sch13.oktobrgrodno.gov.by/%D1%83%D1%87%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%B0%D1%8F/%D0%BD%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%B2%D0%BD%D1%8B%D0%B5-%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D0%B2%D1%8B%D0%B5-%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D1%8B"
        url1 = "https://sch13.oktobrgrodno.gov.by/%D1%83%D1%87%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%B0%D1%8F/%D0%BD%D0%BE%D1%80%D0%BC%D0%B0%D1%82%D0%B8%D0%B2%D0%BD%D1%8B%D0%B5-%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D0%B2%D1%8B%D0%B5-%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D1%8B"
        Url_Base1="https://drive.google.com/file/d/1VXrVd-WmhS4jLipUtIGxiYDs6OvyqoHw/view"
        Url_Base2="https://drive.google.com/file/d/1Vm8cxoIY_5TkHUu9Qed0uG4tICbnufhu/view"
        message = ("")
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            articles = soup.find_all('div', class_='col-sm-8 col-lg-9 article')
            for article in articles:
                # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
                title = article.find('h1').get_text(strip=True)
                message += f"üìÇ {title}\n\n"
                message += f"   üîó [–ö–æ–¥–µ–∫—Å –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å]({Url_Base1}\n)"
                message += f"\n   üîó [–î–ï–ö–†–ï–¢ –ü–†–ï–ó–ò–î–ï–ù–¢–ê –†–ï–°–ü–£–ë–õ–ò–ö–ò –ë–ï–õ–ê–†–£–°–¨ 24 –Ω–æ—è–±—Ä—è 2006 –≥. No 18 –û –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –º–µ—Ä–∞—Ö –ø–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π –∑–∞—â–∏—Ç–µ –¥–µ—Ç–µ–π –≤ –Ω–µ–±–ª–∞–≥–æ–ø–æ–ª—É—á–Ω—ã—Ö —Å–µ–º—å—è—Ö]({Url_Base2})\n\n"
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö `div.content` –≤–Ω—É—Ç—Ä–∏ —Å—Ç–∞—Ç—å–∏
                contents = article.find_all('div', class_='content')[:3]
                for content in contents:
                    # –ü–æ–∏—Å–∫ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (h2)
                    subtitles = content.find_all('h2')
                    if subtitles:
                        for subtitle in subtitles:
                            subtitle_text = subtitle.get_text(strip=True)
                            message += f"üìå {subtitle_text}\n"

                            # –ò—â–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –ø–æ—Å–ª–µ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞
                            sibling = subtitle.find_next_sibling()
                            while sibling:
                                links = sibling.find_all('a', href=True)
                                for link in links:
                                    text = link.get_text(strip=True)
                                    url = link['href']
                                    if text:
                                        message += f"   üîó [{text}]({url})\n"
                                    else:
                                        message += f"   üîó {url}\n"
                                sibling = sibling.find_next_sibling()
                            message += "\n"
                    else:
                        # –ï—Å–ª–∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –Ω–µ—Ç, –∏—â–µ–º —Å—Å—ã–ª–∫–∏ –≤ –æ–±—â–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ
                        links = content.find_all('a', href=True)
                        for link in links:
                            text = link.get_text(strip=True)
                            url = link['href']
                            if text:
                                message += f"üîó [{text}]({url})\n"
                            else:
                                message += f"üîó {url}\n"
                        message += "\n"
            message +=(f"\nüìö C –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ –º–æ–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è [–∑–¥–µ—Å—å]({url1})")
        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        keyboard = [
            [InlineKeyboardButton("–®–ê–ì", callback_data='Tbutton1'),
             InlineKeyboardButton("–°–ü–ü–°", callback_data='Tbutton3')],
            [InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='back')]
        ]
    elif query_data == "Tbutton3":
        url = "https://sch13.oktobrgrodno.gov.by/%D1%81%D0%BF%D0%BF%D1%81/%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D1%8F-%D0%B4%D0%BB%D1%8F-%D0%BF%D0%B5%D0%B4%D0%B0%D0%B3%D0%BE%D0%B3%D0%BE%D0%B2"
        url1 = "https://sch13.oktobrgrodno.gov.by/%D1%81%D0%BF%D0%BF%D1%81/%D1%81%D0%BE%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE-%D0%BF%D0%B5%D0%B4%D0%B0%D0%B3%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D0%B8-%D0%BF%D1%81%D0%B8%D1%85%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D1%81%D0%BB%D1%83%D0%B6%D0%B1%D0%B0"
        message = ("üì¢**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –£—á–∏—Ç–µ–ª–µ–π:**\n")
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            # –ù–∞—Ö–æ–¥–∏–º –≤–∫–ª–∞–¥–∫—É —Å id="tab4"
            items1 = soup.find("div", class_="col-sm-8 col-lg-9 article")
            items = items1.find_all("h3")
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –ø–µ—Ä–∏–æ–¥ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
            for item in items:
                temp = item.get_text(strip=True)
                message += f"\n‚úÖ{temp}\n [–ü–æ–¥—Ä–æ–±–Ω–µ–µ]({url})"
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message += (f"\n\nüìû–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è –ø–æ–º–æ—â–∏ –¥–ª—è —É—á–∞—â–∏—Ö—Å—è: `170`")
            message += (f"\n\n‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å üí¨[–°—é–¥–∞]({url1} \n ")

        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"
        keyboard = [
            [InlineKeyboardButton("–ù–æ—Ä–º. –î–æ–∫—É–º–µ–Ω—Ç—ã", callback_data='Tbutton2'),
             InlineKeyboardButton("–®–ê–ì", callback_data='Tbutton1')],
            [InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='back')]
        ]
    elif query_data == "student":
        message = ("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –£—á–µ–Ω–∏–∫! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã ‚Ññ13üéì.\n\n"
                   "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n\n"
                   "  /news ‚Äî –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π\n"
                   "  /Info ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–∫–æ–ª–µ\n"
                   "  /schedule ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n"
                   "  /help ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª—å—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ")
        keyboard = [
            [InlineKeyboardButton("–ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è", callback_data='Sbutton1'),
             InlineKeyboardButton("–°–ü–ü–°", callback_data='Sbutton2'),
             InlineKeyboardButton("–í—ã–ø—É—Å–∫–Ω–∏–∫—É", callback_data='Sbutton3')],
            [InlineKeyboardButton("–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='back')]
        ]
    elif query_data == "Sbutton1":
        url="https://docs.google.com/presentation/d/1N5-rN4vbGvJ-wWfWU8ID7ZK52F7uZpFma1JkHltbFHg/edit?usp=sharing"
        url1="https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1%D1%83%D1%87%D0%B0%D1%8E%D1%89%D0%B8%D0%BC%D1%81%D1%8F/%D0%BF%D1%80%D0%BE%D1%84%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F"
        message = (
            "üéì *–ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –¥–ª—è —É—á–∞—â–∏—Ö—Å—è*\n\n"
            "–î–ª—è —É—á–∞—â–∏—Ö—Å—è *9-—Ö –∫–ª–∞—Å—Å–æ–≤* –≤–æ–ø—Ä–æ—Å –æ –≤—ã–±–æ—Ä–µ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –æ—Å—Ç–∞–µ—Ç—Å—è –∞–∫—Ç—É–∞–ª—å–Ω—ã–º. "
            "–ß—Ç–æ–±—ã –ø–æ–º–æ—á—å —à–∫–æ–ª—å–Ω–∏–∫–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å –≤—ã–±–æ—Ä–æ–º –∏ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å —Å–æ–º–Ω–µ–Ω–∏—è, –±—ã–ª–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è:\n\n"
            f"üìë **[–ü–†–ï–ó–ï–ù–¢–ê–¶–ò–Ø]({url})**\n"
            "‚ú® –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ:\n"
            f"üîó **[–ü–æ–¥—Ä–æ–±–Ω–µ–µ –∑–¥–µ—Å—å]({url1})**\n\n"
            f"–ú—ã –Ω–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —ç—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º –≤ –≤—ã–±–æ—Ä–µ –±—É–¥—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏!üöÄ\n\n {url1}"
        )

        keyboard = [
            [InlineKeyboardButton("–°–ü–ü–°", callback_data="Sbutton2"),
             InlineKeyboardButton("–í—ã–ø—É—Å–∫–Ω–∏–∫—É", callback_data="Sbutton3")],
             [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Sback")]
        ]
    elif query_data == "Sbutton2":
        url="https://sch13.oktobrgrodno.gov.by/%D1%81%D0%BF%D0%BF%D1%81/%D0%B8%D0%BD%D1%84%D0%BE%D1%80%D0%BC%D0%B0%D1%86%D0%B8%D1%8F-%D0%B4%D0%BB%D1%8F-%D1%83%D1%87%D0%B0%D1%89%D0%B8%D1%85%D1%81%D1%8F"
        url1="https://sch13.oktobrgrodno.gov.by/%D1%81%D0%BF%D0%BF%D1%81/%D1%81%D0%BE%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE-%D0%BF%D0%B5%D0%B4%D0%B0%D0%B3%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D0%B8-%D0%BF%D1%81%D0%B8%D1%85%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D1%81%D0%BB%D1%83%D0%B6%D0%B1%D0%B0"
        message=("üì¢**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —É—á–∞—â–∏—Ö—Å—è**\n"
                 "üìå–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã –¥–ª—è —É—á–∞—â–∏—Ö—Å—è:\n")
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            # –ù–∞—Ö–æ–¥–∏–º –≤–∫–ª–∞–¥–∫—É —Å id="tab4"
            items1 = soup.find("div", class_="col-sm-8 col-lg-9 article")
            items=items1.find_all("h3")
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –ø–µ—Ä–∏–æ–¥ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
            for item in items:
                temp=item.get_text(strip=True)
                message+=f"\n‚úÖ{temp}\n [–ü–æ–¥—Ä–æ–±–Ω–µ–µ]({url})"
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message += (f"\n\nüìû–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è –ø–æ–º–æ—â–∏: `170`")
            message+=(f"\n\n‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å üí¨[–°—é–¥–∞]({url1} \n ")

        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        keyboard = [
            [InlineKeyboardButton("–ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è", callback_data="Sbutton1"),
             InlineKeyboardButton("–í—ã–ø—É—Å–∫–Ω–∏–∫—É", callback_data="Sbutton3")],
             [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Sback")]
        ]
    elif query_data == "Sbutton3":
        url="https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1%D1%83%D1%87%D0%B0%D1%8E%D1%89%D0%B8%D0%BC%D1%81%D1%8F/%D0%B2%D1%8B%D0%BF%D1%83%D1%81%D0%BA%D0%BD%D0%B8%D0%BA%D1%83"
        message = (
            "üéì *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤*\n\n"
            "–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Å–æ–±—Ä–∞–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π—Ç–∏ —ç—Ç–∞–ø—ã –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏.\n\n"
            f"üìå –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–æ—Å—Ç—É–ø–µ–Ω [–∑–¥–µ—Å—å]({url}).\n"
            "–ú—ã –∂–µ–ª–∞–µ–º –≤–∞–º —É–¥–∞—á–∏ –Ω–∞ –ø—É—Ç–∏ –∫ –Ω–æ–≤—ã–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º –∏ —É—Å–ø–µ—Ö–∞–º! üöÄ"
        )

        keyboard = [
            [InlineKeyboardButton("–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –£–í–û", callback_data="UVO"),
             InlineKeyboardButton("–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –£–°–°–û", callback_data="USSO"),
             InlineKeyboardButton("–ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞", callback_data="Kalend")],
            [InlineKeyboardButton("–°–ü–ü–°", callback_data="Sbutton2"),
             InlineKeyboardButton("–ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è", callback_data="Sbutton1")],
             [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Sback")]
        ]

    elif query_data=="UVO":
        url="https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1%D1%83%D1%87%D0%B0%D1%8E%D1%89%D0%B8%D0%BC%D1%81%D1%8F/%D0%B2%D1%8B%D0%BF%D1%83%D1%81%D0%BA%D0%BD%D0%B8%D0%BA%D1%83"
        message=("üìã *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤:*\n\n")
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            # –ù–∞—Ö–æ–¥–∏–º –≤–∫–ª–∞–¥–∫—É —Å id="t"
            items = soup.find("div", id="tab2")
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –ø–µ—Ä–∏–æ–¥ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
            paragraphs = items.find_all("p")[1:]
            list_items = items.find_all("li")

            # –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Å–ø–∏—Å–∫–æ–≤
            din = 0  # –î–ª—è paragraphs
            bin = 0  # –î–ª—è list_items

            # –í—ã–≤–æ–¥–∏–º –æ–¥–∏–Ω –±–ª–æ–∫ <p> –∏ –¥–≤–∞ –±–ª–æ–∫–∞ <li>
            for i in range(min(len(paragraphs), 2)):
                # –í—ã–≤–æ–¥–∏–º –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –∏–∑ paragraphs
                paragraph_text = paragraphs[i].get_text(strip=True)
                if paragraph_text:
                    message += f"üìå {paragraph_text}\n\n"

                # –í—ã–≤–æ–¥–∏–º —Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ list_items
                for j in range(i * 3, i * 3 + 3):
                    if j < len(list_items):
                        item_text = list_items[j].get_text(strip=True)
                        if item_text:
                            message += f"üîπ {item_text}\n\n"

            message += (f"\nüìñ –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ [–∑–¥–µ—Å—å]({url}) –≤ —Ä–∞–∑–¥–µ–ª–µ \"–°—Ä–æ–∫–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –£–°–°–û\".")
        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        keyboard =[[(InlineKeyboardButton("–ù–∞–∑–∞–¥",callback_data="Sbutton3"))]]

    elif query_data=="USSO":
        url = "https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1%D1%83%D1%87%D0%B0%D1%8E%D1%89%D0%B8%D0%BC%D1%81%D1%8F/%D0%B2%D1%8B%D0%BF%D1%83%D1%81%D0%BA%D0%BD%D0%B8%D0%BA%D1%83"
        message=("üìã *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –≤—ã–ø—É—Å–∫–Ω–∏–∫–æ–≤:*\n\n")
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

            soup = BeautifulSoup(response.text, "html.parser")
            # –ù–∞—Ö–æ–¥–∏–º –≤–∫–ª–∞–¥–∫—É —Å id="tab3"
            items = soup.find("div", id="tab3")
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ <p> –∏ —Å–ø–∏—Å–∫–∏ <li>
            paragraphs = items.find_all("p")[1:]
            list_items = items.find_all("li")

            for i in range(min(len(paragraphs), 2)):
                # –í—ã–≤–æ–¥–∏–º –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –∏–∑ paragraphs
                paragraph_text = paragraphs[i].get_text(strip=True)
                if paragraph_text:
                    message += f"üìå {paragraph_text}\n\n"

                # –í—ã–≤–æ–¥–∏–º —Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ list_items
                for j in range(i * 4, i * 4 + 4):
                    if j < len(list_items):
                        item_text = list_items[j].get_text(strip=True)
                        if item_text:
                            message += f"üîπ {item_text}\n\n"

            message += (f"\nüìñ –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ [–∑–¥–µ—Å—å]({url}) –≤ —Ä–∞–∑–¥–µ–ª–µ \"–°—Ä–æ–∫–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –£–°–°–û\".")
        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"


        keyboard =[[(InlineKeyboardButton("–ù–∞–∑–∞–¥",callback_data="Sbutton3"))]]

    elif query_data=="Kalend":
        url = "https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1%D1%83%D1%87%D0%B0%D1%8E%D1%89%D0%B8%D0%BC%D1%81%D1%8F/%D0%B2%D1%8B%D0%BF%D1%83%D1%81%D0%BA%D0%BD%D0%B8%D0%BA%D1%83"
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞

            soup = BeautifulSoup(response.text, "html.parser")

            # –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º
            items = soup.find("div", id="tab1")

            # –ò—â–µ–º –≤—Å–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã
            paragraphs = items.find_all("p")

            events = []

            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã
            for paragraph in paragraphs:
                # –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –º–µ—Å—è—Ü–µ–º –∏–ª–∏ —Å–æ–±—ã—Ç–∏–µ–º
                month_span = paragraph.find("span", style="color: red;")  # –ú–µ—Å—è—Ü
                event_spans_120 = paragraph.find_all("span",
                                                     style="color: black; font-size: 120%;")  # –°–æ–±—ã—Ç–∏—è —Å font-size 120%
                event_spans = paragraph.find_all("span", style="color: black;")  # –°–æ–±—ã—Ç–∏—è –±–µ–∑ font-size 120%

                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –º–µ—Å—è—Ü–∞
                month = month_span.get_text(strip=True) if month_span else None

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∏—Ö –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
                all_event_text = []

                # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è —Å font-size 120%
                for event in event_spans_120:
                    event_text = event.get_text(strip=True)
                    if event_text:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Å–æ–±—ã—Ç–∏–µ
                        all_event_text.append(event_text)

                # –ó–∞—Ç–µ–º –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
                for event in event_spans:
                    event_text = event.get_text(strip=True)
                    if event_text:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–µ —Å–æ–±—ã—Ç–∏–µ
                        all_event_text.append(event_text)

                # –ï—Å–ª–∏ –º–µ—Å—è—Ü –∏–ª–∏ —Å–æ–±—ã—Ç–∏—è –Ω–∞–π–¥–µ–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ —Å–ø–∏—Å–æ–∫
                if month or all_event_text:
                    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                    events.append({"month": month, "events": ' '.join(all_event_text).strip()})

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = "üìÖ *–ö–∞–ª–µ–Ω–¥–∞—Ä—å –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞*\n\n"
            for event in events:
                if event["month"]:
                    message += f"üî∏ *{event['month']}*\n"
                if event["events"]:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è
                    message += f"  - {event['events']}\n"
                message += "\n"


        except requests.RequestException as e:
            message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        keyboard = [[(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Sbutton3"))]]


    elif query_data == "back":
        await start(update, context)
        return
    else:
        return

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    await query.edit_message_text(text=message, reply_markup=reply_markup, parse_mode="Markdown")

#–ù–æ–≤–æ—Å—Ç–∏ + —Å—Å—ã–ª–∫–∞ –Ω–∞ –Ω–∏—Ö
async def news(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = "https://sch13.oktobrgrodno.gov.by/%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B/%D0%B0%D1%80%D1%85%D0%B8%D0%B2-%D0%BD%D0%BE%D0%B2%D0%BE%D1%81%D1%82%D0%B5%D0%B9"
    response = requests.get(url)

    if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')
        items = soup.find_all('div', class_='item')

        if items:
            news_text = "üì¢ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü:\n\n"
            for item in items[:10]:  # –û–≥—Ä–∞–Ω–∏—á–∏–º –≤—ã–≤–æ–¥ 10 –Ω–æ–≤–æ—Å—Ç—è–º–∏
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–æ–≤–æ—Å—Ç—å
                link = item.find('a', class_='preview')['href'] if item.find('a', class_='preview') else None

                # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–∞—è, –¥–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL
                full_link = link if link else "–°—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
                if not full_link.startswith("http"):
                    full_link = "https://sch13.oktobrgrodno.gov.by" + link  # –î–æ–±–∞–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–π URL

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É
                date = item.find('span', class_='date').get_text() if item.find('span', class_='date') else "–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"

                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏
                title = item.find('h3').get_text() if item.find('h3') else "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏ —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
                news_text += f"**{title}**\nüìÖ –î–∞—Ç–∞: {date}\n [–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ]({full_link})\n\n"

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏
            await update.message.reply_text(news_text, parse_mode='Markdown')
        else:
            await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–æ–≤–æ—Å—Ç–∏.")
    else:
        await update.message.reply_text("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞.")

 #–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /info
async def info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–ª–∞—Å—Å—ã
    link1 = "https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1-%D1%83%D1%87%D1%80%D0%B5%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B8/%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B-%D0%BF%D1%80%D0%BE%D1%84%D0%B5%D1%81%D1%81%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9-%D0%BD%D0%B0%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B8/%D1%82%D0%B0%D0%BC%D0%BE%D0%B6%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9-%D0%BA%D0%BB%D0%B0%D1%81%D1%81"
    link2 = "https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1-%D1%83%D1%87%D1%80%D0%B5%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B8/%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B-%D0%BF%D1%80%D0%BE%D1%84%D0%B5%D1%81%D1%81%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9-%D0%BD%D0%B0%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B8/%D0%BF%D1%80%D0%B0%D0%B2%D0%BE%D0%B2%D0%BE%D0%B9-%D0%BA%D0%BB%D0%B0%D1%81%D1%81"
    link3 = "https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1-%D1%83%D1%87%D1%80%D0%B5%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B8/%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B-%D0%BF%D1%80%D0%BE%D1%84%D0%B5%D1%81%D1%81%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9-%D0%BD%D0%B0%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B8/%D0%BD%D0%B0%D0%BB%D0%BE%D0%B3%D0%BE%D0%B2%D0%BE%D0%B9-%D0%BA%D0%BB%D0%B0%D1%81%D1%81"

    # –¢–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    welcome_text = (
        f"üéì*–°–†–ï–î–ù–Ø–Ø –®–ö–û–õ–ê ‚Ññ13 –∏–º–µ–Ω–∏ –í.–¢.–¶–∞–±–æ*\n\n"
        "–ü—Ä–µ–¥–º–µ—Ç–æ–º –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —à–∫–æ–ª—ã —è–≤–ª—è–µ—Ç—Å—è –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, "
        "–≤–∫–ª—é—á–∞—é—â–µ–π –æ–±—É—á–µ–Ω–∏–µ –∏ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å.\n\n"
        "*–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å:* —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–π, –Ω—Ä–∞–≤—Å—Ç–≤–µ–Ω–Ω–æ –∑—Ä–µ–ª–æ–π, "
        "—Ä–∞–∑–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ —Ä–∞–∑–≤–∏—Ç–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏, —Å–ø–æ—Å–æ–±–Ω–æ–π —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª "
        "–≤ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö —Å–æ—Ü–∏–∞–ª—å–Ω–æ-—ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö.\n\n"
        "*–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —à–∫–æ–ª—ã:* \n "
        "‚Ä¢ –ö–ª–∞—Å—Å—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç–∏:\n"
        f"[–¢–∞–º–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å]({link1}), [–ü—Ä–∞–≤–æ–≤–æ–π –∫–ª–∞—Å—Å]({link2}), [–ù–∞–ª–æ–≥–æ–≤—ã–π –∫–ª–∞—Å—Å]({link3});\n"
        f"‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω–∞—è —à–∫–æ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –æ—Ç–ª–∏—á–∞—é—â–∞—è—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ—Ñ. –∫–ª–∞—Å—Å–∞.\n\n"
        f"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∏–Ω–∏-–∏—Å—Ç–æ—Ä–∏–∏ –æ –Ω–∞–∑–≤–∞–Ω–∏–∏ —à–∫–æ–ª—ã –Ω–∞–ø–∏—à–∏—Ç–µ üìñ'*–ò—Å—Ç–æ—Ä–∏—è*'\n\n"
        f"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–∞–º–∏\n"
        f"–ò–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ:"
    )

    # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
    # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
    keyboard = [
        [
            InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='kinfo'),
            InlineKeyboardButton("–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —à–∫–æ–ª—ã", callback_data='pkol'),
            InlineKeyboardButton("–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–± —Ä–µ—Å—É—Ä—Å—ã", callback_data='veb')
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    if update.message:
        await update.message.reply_text(welcome_text, reply_markup=reply_markup, parse_mode="Markdown")
    elif update.callback_query:
        await update.callback_query.edit_message_text(welcome_text, reply_markup=reply_markup, parse_mode="Markdown")

#–º–∏–Ω–∏ –∏—Å—Ç–æ—Ä–∏—è
async def story(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message
    if user_message:
        await user_message.delete()
    story_text = (
        "üéì–°–†–ï–î–ù–Ø–Ø –®–ö–û–õ–ê ‚Ññ13 –∏–º–µ–Ω–∏ –í.–¢.–¶–∞–±–æ.üéì\n\n"
        "‚Ä¢–ú–∏–Ω–∏-–∏—Å—Ç–æ—Ä–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è:\n"
        "–®–∫–æ–ª–∞ –Ω–∞–∑–≤–∞–Ω–∞ –≤ —á–µ—Å—Ç—å –∏–º–µ–Ω–∏ –í–ª–∞–¥–∏–º–∏—Ä–∞ –¢–∏—Ö–æ–Ω–æ–≤–∏—á–∞ –¶–∞–±–æ. –¶–∞–±–æ, –æ–¥–Ω–æ–≥–æ –∏–∑ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤ "
        "–¥–∏–≤–µ—Ä—Å–∏–æ–Ω–Ω–æ–π –±—Ä–∏–≥–∞–¥—ã, —è–≤–ª—è—é—â–µ–π—Å—è —Å–∞–º—ã–º –º–æ—â–Ω—ã–º –¥–∏–≤–µ—Ä—Å–∏–æ–Ω–Ω—ã–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –±—Ä–∏–≥–∞–¥—ã –í–æ—Ä–æ—à–∏–ª–æ–≤–∞."
        "–í —Ö–æ–¥–µ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∞–ª–µ—Ç–æ–≤ –í–ª–∞–¥–∏–º–∏—Ä –¢–∏—Ö–æ–Ω–æ–≤–∏—á –±—ã–ª —Ä–∞–Ω–µ–Ω –≤ –æ–±–µ –Ω–æ–≥–∏, –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö –ø–æ–∑–∂–µ –æ–Ω –ø–æ—Ç–µ—Ä—è–ª."
        "–í –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ —á–µ–≥–æ –±—ã–ª –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤ —Ç—ã–ª –∏ –ø–æ–ª—É—á–∏–ª –û—Ä–¥–µ–Ω –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã I —Å—Ç–µ–ø–µ–Ω–∏. "
        "–í.–¢. –¶–∞–±–æ —Ä—É–∫–æ–≤–æ–¥–∏–ª –°—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª–æ–π ‚Ññ 13 –≥. –ì—Ä–æ–¥–Ω–æ —Å 1957 –ø–æ 1968 –≥–≥."
        "–∏ –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥ —Å—É–º–µ–ª –¥–æ—Å—Ç–∏—á—å –Ω–µ–º–∞–ª—ã—Ö —É—Å–ø–µ—Ö–æ–≤. –û–Ω –ø–µ—Ä–≤—ã–º –∑–∞—Ä–æ–¥–∏–ª —à–∫–æ–ª—å–Ω—ã–µ —Ç—Ä–∞–¥–∏—Ü–∏–∏ "
        "–ø—Ä–æ–≤–æ–¥–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫–∏, —ç–∫—Å–∫—É—Ä—Å–∏–∏, –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –≥–æ—Ä—è—á–∏–µ –∑–∞–≤—Ç—Ä–∞–∫–∏ –¥–ª—è —É—á–∞—â–∏—Ö—Å—è.\n\n"
        "–ù–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –®–∫–æ–ª–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ –≥–¥–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ "
        "–æ–±—É—á–∞–µ—Ç—Å—è –±–æ–ª–µ–µ 500 —É—á–∞—â–∏—Ö—Å—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–ª–∞—Å—Å–∞—Ö."
    )
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    keyboard = [
        [InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="delete_story")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–æ–π
    await update.message.reply_text(
        text=story_text,
        parse_mode="HTML",
        reply_markup=reply_markup
    )

async def delete_story(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å "—á–∞—Å–æ–≤"
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await query.message.delete()
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ —Ä–∞–∑–¥–µ–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
async def info_button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º "–∑–∞–≥—Ä—É–∑–∫–∞" –Ω–∞ –∫–Ω–æ–ø–∫–µ

    # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
    if query.data == 'kinfo':
        text = (
            "üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
            "‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω—ã:\n"
            "  (0152) 71-22-44 –î–∏—Ä–µ–∫—Ç–æ—Ä —à–∫–æ–ª—ã\n"
            "  (0152) 71-22-47 –ü—Ä–∏–µ–º–Ω–∞—è, —Ñ–∞–∫—Å\n"
            "  (0152) 71-22-45 –ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –¥–∏—Ä—Ä–µ–∫—Ç–æ—Ä–∞ –ø–æ —É—á–µ–±–Ω–æ-–º–µ—Ç–æ–¥. —Ä–∞–±–æ—Ç–µ\n"
            "  (0152) 71-22-46 –ú–µ–¥–µ—Ü–∏–Ω—Å–∫–∏–π –∫–∞–±–∏–Ω–µ—Ç\n"
            "‚Ä¢ –ê–¥—Ä–µ—Å: –≥. –ì—Ä–æ–¥–Ω–æ, —É–ª.–ë–µ—Ä—ë–∑–æ–≤–∞—è, 2 \n"
            "‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: sch13@oktobrgrodno.gov.by"
        )
    elif query.data == 'pkol':
        Url="https://sch13.oktobrgrodno.gov.by/%D0%BE%D0%B1-%D1%83%D1%87%D1%80%D0%B5%D0%B6%D0%B4%D0%B5%D0%BD%D0%B8%D0%B8/%D1%80%D1%83%D0%BA%D0%BE%D0%B2%D0%BE%D0%B4%D1%81%D1%82%D0%B2%D0%BE-%D1%88%D0%BA%D0%BE%D0%BB%D1%8B"
        linkTech="https://sch13.oktobrgrodno.gov.by/%D1%83%D1%87%D0%B8%D1%82%D0%B5%D0%BB%D1%8C%D1%81%D0%BA%D0%B0%D1%8F/%D0%BF%D0%B5%D0%B4%D0%B0%D0%B3%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D0%B9-%D0%BA%D0%BE%D0%BB%D0%BB%D0%B5%D0%BA%D1%82%D0%B8%D0%B2"
        response = requests.get(Url)

        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            items = soup.find_all('div', class_='item item_card')

            leadership = []
            for item in items:
                # –ò–º—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
                name_tag = item.find("h3")
                name = name_tag.text.strip() if name_tag else "–ò–º—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

                # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
                details_list = item.find("ul", class_="list-unstyled")
                details = []
                if details_list:
                    details = [li.text.strip() for li in details_list.find_all("li")]

                leadership.append({"name": name, "details": details})

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
            if leadership:
                text = "üë®‚Äçüíº –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —à–∫–æ–ª—ã:\n\n"
                for leader in leadership:
                    text += f"‚Ä¢ –ò–º—è: {leader['name']}\n"
                    text += "\n ".join(leader['details']) + "\n\n"
                text+=f"üë©‚Äçüè´ –¢–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å [–ü–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–º –∫–æ–ª–ª–µ–∫—Ç–∏–≤–æ–º]({linkTech})"
            else:
                text = "–î–∞–Ω–Ω—ã–µ –æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–µ —à–∫–æ–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
        else:
            text="–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞"

    elif query.data == 'veb':

        text = (
            "üåê –°—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–±-—Ä–µ—Å—É—Ä—Å—ã:\n"
            "‚Ä¢ [–°–∞–π—Ç —à–∫–æ–ª—ã](https://sch13.oktobrgrodno.gov.by)\n"
            "‚Ä¢ [–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∂—É—Ä–Ω–∞–ª](https://example.com)"
        )
    elif query.data == 'Iback':
        await info(update, context)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        return
    else:
        return

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é "–ù–∞–∑–∞–¥"
    keyboard = [
        [
            InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='kinfo') if query.data != 'kinfo' else None,
            InlineKeyboardButton("–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —à–∫–æ–ª—ã", callback_data='pkol') if query.data != 'pkol' else None,
            InlineKeyboardButton("–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–µ–± —Ä–µ—Å—É—Ä—Å—ã", callback_data='veb') if query.data != 'veb' else None,
            InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data='Iback'),

        ]
    ]

    # –£–±–∏—Ä–∞–µ–º `None` –∏–∑ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫
    keyboard = [list(filter(None, row)) for row in keyboard]

    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await query.edit_message_text(text, reply_markup=reply_markup, parse_mode="Markdown")

async def schedule(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text=(
        "üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</b>:\n\n"
        "<pre>"
        "|1 —Å–º–µ–Ω–∞       | 2 —Å–º–µ–Ω–∞       | \n"
        "|------------------------------| \n"
        "|8:00 ‚Äì 8:45   | 14:00 ‚Äì 14:45 | \n"
        "|8:55 ‚Äì 9:40   | 15:00 ‚Äì 15:45 | \n"
        "|9:55 ‚Äì 10:40  | 16:00 ‚Äì 16:45 | \n"
        "|10:55 ‚Äì 11:40 | 16:55 ‚Äì 17:40 | \n"
        "|12:00 ‚Äì 12:45 | 17:50 ‚Äì 18:35 | \n"
        "|12:55 ‚Äì 13:40 | 18:45 ‚Äì 19:30 | "
        "</pre>"
    )
    keyboard=[
        [
            InlineKeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π",callback_data="fakult")],
            [InlineKeyboardButton("–ö–∞–ª–µ–Ω–¥–∞—Ä—å —á–µ—Ç–≤–µ—Ä—Ç–µ–π –∏ –∫–∞–Ω–∏–∫—É–ª",callback_data="Kon")
        ]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.callback_query:
        query = update.callback_query
        await query.edit_message_text(text=text, reply_markup=reply_markup, parse_mode="HTML")
    else:
        await update.message.reply_text(text, reply_markup=reply_markup, parse_mode="HTML")

async def handle_button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–µ

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞
    if query.data == "fakult":
        text = (
            "üìö <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π</b>:\n\n"
            "<pre>"
            "–î–µ–Ω—å       | –í—Ä–µ–º—è        | –ü—Ä–µ–¥–º–µ—Ç\n"
            "---------------------------------\n"
            "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫| 14:00 - 15:00| –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞\n"
            "–í—Ç–æ—Ä–Ω–∏–∫    | 15:00 - 16:00| –•–∏–º–∏—è\n"
            "–°—Ä–µ–¥–∞      | 13:00 - 14:00| –§–∏–∑–∏–∫–∞\n"
            "–ß–µ—Ç–≤–µ—Ä–≥    | 14:30 - 15:30| –ë–∏–æ–ª–æ–≥–∏—è\n"
            "–ü—è—Ç–Ω–∏—Ü–∞    | 12:00 - 13:00| –ò—Å—Ç–æ—Ä–∏—è\n"
            "</pre>"
        )
        keyboard = [
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="schedule")]
        ]
    elif query.data == "Kon":
        url = "https://sch13.oktobrgrodno.gov.by/%d0%be%d0%b1%d1%83%d1%87%d0%b0%d1%8e%d1%89%d0%b8%d0%bc%d1%81%d1%8f/%d0%be%d1%80%d0%b3%d0%b0%d0%bd%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f-%d0%be%d0%b1%d1%80%d0%b0%d0%b7%d0%be%d0%b2%d0%b0%d1%82%d0%b5%d0%bb%d1%8c%d0%bd%d0%be%d0%b3%d0%be-%d0%bf%d1%80%d0%be%d1%86%d0%b5%d1%81%d1%81%d0%b0"
        try:
            response = requests.get(url)
            response.raise_for_status()  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–¥ –Ω–µ 200

            soup = BeautifulSoup(response.text, "html.parser")
            items = soup.find_all("p", style=lambda value: value and "text-align: justify;" in value)

            # –°–±–æ—Ä —Ç–µ–∫—Å—Ç–∞ –∏–∑ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            text_list = [item.get_text(strip=True) for item in items if item.get_text(strip=True)]
            text = "üìú <b>–ö–∞–ª–µ–Ω–¥–∞—Ä—å —á–µ—Ç–≤–µ—Ä—Ç–µ–π –∏ –∫–∞–Ω–∏–∫—É–ª:</b>\n\n" + "\n\n".join(text_list[:10])
        except requests.RequestException as e:
            text = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞: {e}"
        except Exception as e:
            text = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"

        keyboard = [
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="schedule")]
        ]
    elif query.data == "schedule":
        # –í–æ–∑–≤—Ä–∞—Ç –∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
        await schedule(update, context)
        return
    else:
        text = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!"
        keyboard = [
            [InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="schedule")]
        ]

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text(text=text, parse_mode="HTML", reply_markup=reply_markup)

async def help(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text=(f"–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –±–æ—Ç–∞:\n\n"
          f"üìù–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–º–∞–Ω–¥—ã:\n"
          f" /start - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n"
          f" /news ‚Äî –¥–ª—è –ø–æ–∫–∞–∑–∞ –Ω–æ–≤–æ—Å—Ç–µ–π\n"
          f" /Info ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —à–∫–æ–ª–µ\n"
          f" /schedule ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n"
          f" /help ‚Äî –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª—å—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ\n"
          "üí¨ *–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:*\n"
          "   –ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å:\n"
          "   - _\"–ù–æ–≤–æ—Å—Ç–∏\"_ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π\n"
          "   - _\"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ\"_ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n"
          "   _–ò.—Ç.–¥_"
    )

    await update.message.reply_text(text=text, parse_mode="Markdown")
# –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
async def handle_search_input(update, context):
    user_input = update.message.text.strip().lower()
    search_type = context.user_data.get('search_type')  # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –ø–æ–∏—Å–∫–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    url="https://sch13.oktobrgrodno.gov.by/%D0%B2%D0%BE%D1%81%D0%BF%D0%B8%D1%82%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%B0%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0/%D1%88%D0%BA%D0%BE%D0%BB%D0%B0-%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%BD%D0%BE%D0%B3%D0%BE-%D0%B3%D1%80%D0%B0%D0%B6%D0%B4%D0%B0%D0%BD%D0%B8%D0%BD%D0%B0"
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫
    if not search_type:
        # –ï—Å–ª–∏ –ø–æ–∏—Å–∫–∞ –Ω–µ—Ç (—Ç–æ –µ—Å—Ç—å –Ω–µ—Ç –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–∏—Å–∫), –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤–≤–æ–¥
        return

    filtered_results = []
    if search_type == 'date':
        # –ü–æ–∏—Å–∫ –ø–æ –¥–∞—Ç–µ
        filtered_results = [r for r in results if user_input in r['–î–∞—Ç–∞'].lower()]
    elif search_type == 'theme':
        # –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–º–µ
        filtered_results = [r for r in results if user_input in r['–¢–µ–º–∞'].lower()]

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
    message = "*üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:*\n\n"
    if filtered_results:
        for i, result in enumerate(filtered_results, start=1):
            message += f"*{i}.* _–¢–µ–º–∞:_ {result['–¢–µ–º–∞']}\n"
            message += f"   üìÜ *–î–∞—Ç–∞:* {result['–î–∞—Ç–∞']}\n"
            message+=f"–°—Å—ã–ª–∫–∞ –Ω–∞ [–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é]({url})\n\n"
    else:
        message += ("‚ùó –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É."
                    "\n\n‚ùó –ü—Ä–æ–∞–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞")


    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é
    keyboard = [[InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Tbutton1")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
    await update.message.reply_text(message, reply_markup=reply_markup, parse_mode="Markdown")
    context.user_data['search_type'] = None



if __name__ == '__main__':

    app = Application.builder().token("–¢–£–¢ –í–ê–® –¢–û–ö–ï–ù –ë–û–¢–ê!").build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(–ù–∞—á–∞–ª–æ|–Ω–∞—á–∞–ª–æ|–≥–ª–∞–≤|–ì–ª–∞–≤|–ì–ª–∞–≤–Ω–∞—è|–≥–ª–∞–≤–Ω–∞—è|–°—Ç–∞—Ä—Ç|—Å—Ç–∞—Ä—Ç|start)$"), start))
    app.add_handler(CallbackQueryHandler(start_button_callback,pattern="^(parent|Pbutton1|Pbutton2|sostav|otchet|Pbutton3|Pback|teacher|Tbutton1|search_date|search_theme|Tbutton2|Tbutton3|Tback|student|Sbutton1|Sbutton2|Sbutton3|UVO|USSO|Kalend|Sback|back)$"))
    app.add_handler(CommandHandler(["news"], news))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(–ù–æ–≤–æ—Å—Ç–∏|–Ω–æ–≤–æ—Å—Ç–∏|news)$"), news))
    app.add_handler(CommandHandler(["info"], info))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(–ò–Ω—Ñ–æ|–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è|info)$"), info))
    app.add_handler(CallbackQueryHandler(info_button_callback, pattern="^(kinfo|pkol|veb|Iback)$"))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(–ò—Å—Ç–æ—Ä–∏—è|–∏—Å—Ç–æ—Ä–∏—è)$"), story))
    app.add_handler(CallbackQueryHandler(delete_story, pattern="delete_story"))
    app.add_handler(CommandHandler("schedule",schedule))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(—Ä–∞—Å–ø|—Ä—Å–∞–ø–∏—Å|–†–∞—Å–ø–∏—Å|–†–∞—Å–ø|—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ|–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ|schedule)$"), schedule))
    app.add_handler(CallbackQueryHandler(handle_button_click, pattern="^(fakult|Kon|schedule)$"))
    app.add_handler(CommandHandler("help", help))
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("^(–ø–∞–º–∞–≥—ã|–ø–æ–º–æ—â—å|–ü–æ–º–æ—â—å|help)$"),help))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_search_input))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()
